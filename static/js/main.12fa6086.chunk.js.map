{"version":3,"sources":["colors.js","forms/number/index.js","forms/color/use-click-outside.js","forms/color/color-picker.js","forms/color/index.js","forms/form-wrapper.js","guesses/numeric.js","guesses/color.js","guesses/guess-wrapper.js","App.js","serviceWorker.js","index.js","thumbsup.png"],"names":["colors","reverseColors","reduce","obj","cur","idx","Input","_ref","value","handleChange","inputRef","isNumericMode","showColors","props","ref","onChange","e","target","length","React","createElement","className","style","backgroundColor","width","height","marginTop","NumberForm","_ref2","numOfEntries","handleSubmit","validator","_useState","useState","_toConsumableArray","Array","fill","_useState2","_slicedToArray","values","setValues","firstInput","useRef","updateValue","i","console","log","test","copy","parseInt","alert","onSubmit","preventDefault","some","v","Number","isInteger","current","focus","sendForm","map","key","type","useClickOutside","handler","useEffect","startedInside","startedWhenMounted","listener","event","contains","validateEventStart","document","addEventListener","removeEventListener","ColorPicker","color","onChangeComplete","popover","isOpen","toggle","close","useCallback","onClick","CirclePicker","ColorForm","defaultValues","bottomRef","hex","Form","NumericGuess","ColorGuess","Guess","res","classes","feedback","repeat","bull","trim","cow","concat","join","getRandomDigit","Math","floor","random","App","entries","setEntries","_useState3","_useState4","guesses","setGuesses","_useState5","_useState6","setIsNumericMode","_useState7","_useState8","setupStep","setSetupStep","endOfPage","setTimeout","scrollIntoView","behavior","jsx","setMode","numeric","setup","_len","arguments","_key","randomizeEntries","amount","rand","includes","push","won","guessWithRes","forEach","g","arr","checkGuess","guess","gr","src","thumbsUp","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.12fa6086.chunk.js","sourcesContent":["export const colors = [\r\n    '#000000',\r\n    '#ff0000',\r\n    '#00ff00',\r\n    '#0000ff',\r\n    '#fff700',\r\n    '#ff7700',\r\n    '#9900ff',\r\n    '#ff0099',\r\n    '#00c8ff',\r\n    '#919191'\r\n]\r\n\r\nexport const reverseColors = colors.reduce((obj, cur, idx) => {\r\n    obj[cur] = idx;\r\n    return obj;\r\n}, {});","import React, { useState, useRef } from 'react';\r\nimport { colors } from '../../colors';\r\n\r\n\r\nfunction Input({ value, handleChange, inputRef, isNumericMode, showColors}) {\r\n    let props = {\r\n        value,\r\n        ref: inputRef,\r\n        onChange: (e) => handleChange(e.target.value[e.target.value.length - 1]),\r\n    }\r\n    return <div className='guess-row'>\r\n            <div><input {...props}/></div>\r\n            { !isNumericMode && showColors ? <div style={{ backgroundColor: colors[value], width: '30%', height: '10%', marginTop: '5px'}}></div> : ''}\r\n        </div>\r\n}\r\n\r\n\r\nfunction NumberForm({ numOfEntries, handleSubmit, validator, isNumericMode, showColors }) {\r\n    let [values, setValues] = useState([...Array(numOfEntries).fill('')])\r\n    const firstInput = useRef(null);\r\n\r\n    const updateValue = (i) => (value) => {\r\n        console.log(value)\r\n        if (value && !/^\\d*$/.test(value)) {\r\n            alert('only digits are allowed')\r\n            return;\r\n        }\r\n        let copy = [...values];\r\n        copy[i] = value ? parseInt(value) : '';\r\n        setValues(copy)\r\n    }\r\n\r\n    const sendForm = (e) => {\r\n        e.preventDefault();\r\n        console.log(values)\r\n        if (values.some(v => !Number.isInteger(v) || validator(v))) {\r\n            alert('you have to complete the form with valid values')\r\n            return;\r\n        }\r\n        handleSubmit(values)\r\n        setValues([...Array(numOfEntries).fill('')])\r\n        firstInput.current.focus()\r\n    }\r\n\r\n    return <div className='guess'>\r\n    <form className='values' onSubmit={(e) => sendForm(e)}>\r\n        {values.map((i, idx) => {\r\n            let props = {\r\n                key: idx,\r\n                value: values[idx],\r\n                handleChange: updateValue(idx),\r\n                isNumericMode,\r\n                showColors,\r\n            }\r\n            if (!idx)\r\n                props.inputRef = firstInput;\r\n            return <Input {...props} />\r\n        }\r\n        )}\r\n        <input type=\"submit\" value=\"Submit\" />\r\n    </form>\r\n    </div>\r\n}\r\n\r\nexport default NumberForm;","import { useEffect } from \"react\";\r\n\r\n// Improved version of https://usehooks.com/useOnClickOutside/\r\nconst useClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    let startedInside = false;\r\n    let startedWhenMounted = false;\r\n\r\n    const listener = (event) => {\r\n      // Do nothing if `mousedown` or `touchstart` started inside ref element\r\n      if (startedInside || !startedWhenMounted) return;\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) return;\r\n\r\n      handler(event);\r\n    };\r\n\r\n    const validateEventStart = (event) => {\r\n      startedWhenMounted = ref.current;\r\n      startedInside = ref.current && ref.current.contains(event.target);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", validateEventStart);\r\n    document.addEventListener(\"touchstart\", validateEventStart);\r\n    document.addEventListener(\"click\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", validateEventStart);\r\n      document.removeEventListener(\"touchstart\", validateEventStart);\r\n      document.removeEventListener(\"click\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n\r\nexport default useClickOutside;\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { CirclePicker } from 'react-color';\r\nimport { colors } from '../../colors';\r\n\r\nimport useClickOutside from './use-click-outside';\r\n\r\nexport const ColorPicker = ({ color, onChangeComplete }) => {\r\n  const popover = useRef();\r\n  const [isOpen, toggle] = useState(false);\r\n\r\n  const close = useCallback(() => toggle(false), []);\r\n  useClickOutside(popover, close);\r\n\r\n  function updateColor(color, event) {\r\n    onChangeComplete(color,event);\r\n    toggle(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"picker\">\r\n      <div\r\n        className=\"swatch\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={() => toggle(true)}\r\n      />\r\n\r\n      {isOpen && (\r\n        <div className=\"popover\" ref={popover}>\r\n          <CirclePicker color={color} colors={colors} onChangeComplete={updateColor} width='210px' />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { CirclePicker } from 'react-color';\r\nimport { ColorPicker } from './color-picker';\r\nimport { colors, reverseColors } from '../../colors';\r\n\r\nconst backgroundDefault = '#ffebcd'\r\n\r\n\r\nfunction ColorForm({ numOfEntries, handleSubmit }) {\r\n    const defaultValues = [...Array(numOfEntries).fill(backgroundDefault)];\r\n    let [values, setValues] = useState(defaultValues)\r\n    const bottomRef = useRef(null);\r\n\r\n    const updateValue = (i) => (value) => {\r\n        if (!value) return;\r\n        console.log(value.hex)\r\n        let copy = [...values];\r\n        copy[i] = value.hex;\r\n        setValues(copy)\r\n        bottomRef.current.focus();\r\n    }\r\n\r\n    const submit = () => {\r\n        if (values.some(color => color === backgroundDefault)) return;\r\n        handleSubmit(values.map(color => reverseColors[color]));\r\n        setValues(defaultValues);\r\n    }\r\n\r\n    useEffect(submit, [values])\r\n\r\n    return <div>\r\n            <div className='guess' ref={bottomRef} style={{'margin-bottom': '100px'}}>\r\n            {values.map((i, idx) => {\r\n                return <ColorPicker key={idx} color={i} onChangeComplete={updateValue(idx)}/>\r\n            }\r\n            )}\r\n            </div>\r\n            <div className='color-legend'>\r\n                <CirclePicker colors={colors} width='210px' />\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default ColorForm;","import React from 'react';\r\nimport NumberForm from './number';\r\nimport ColorForm from './color';\r\n\r\n\r\n\r\nfunction Form({ numOfEntries, handleSubmit, isNumericMode }) {\r\n    return isNumericMode ? <NumberForm \r\n        numOfEntries={numOfEntries}\r\n        validator={(v) => v < 0 || v > 9}\r\n        handleSubmit={handleSubmit}\r\n    /> : <ColorForm numOfEntries={numOfEntries} handleSubmit={handleSubmit} />\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nfunction NumericGuess({ values }){\r\n    return <div className='values'>\r\n        {values.map((v,i)=>  <span key={i}>{v}</span>)}\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default NumericGuess;","import React from 'react';\r\nimport { colors } from '../colors';\r\n\r\n\r\nfunction ColorGuess({ values }){\r\n    return <div className='values'>\r\n        {values.map((v,i)=> \r\n         <div key={i} className=\"swatch\" style={{ backgroundColor: colors[v] }} />\r\n         )}\r\n    </div>\r\n}\r\n\r\n\r\nexport default ColorGuess;","import React from 'react';\r\nimport NumericGuess from './numeric';\r\nimport ColorGuess from './color';\r\n\r\nfunction Guess({values, res, isNumericMode, classes}){\r\n    let feedback = '';\r\n    if (res){\r\n        feedback += 'בול '.repeat(res.bull).trim()\r\n        feedback += '  פגיעה'.repeat(res.cow)\r\n    }\r\n    return <div className={['guess', ...classes].join(' ')}>\r\n    {res && <div className=\"feedback\">\r\n        {feedback}\r\n        </div>}\r\n    { isNumericMode ? <NumericGuess values={values} /> : <ColorGuess values={values} />}\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default Guess;","import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport Form from './forms/form-wrapper.js';\r\nimport NumberForm from './forms/number/index.js';\r\nimport Guess from './guesses/guess-wrapper.js';\r\nimport thumbsUp from './thumbsup.png';\r\n\r\nfunction App() {\r\n  let [entries, setEntries] = useState(0);\r\n  let [guesses, setGuesses] = useState([]);\r\n  let [isNumericMode, setIsNumericMode] = useState(false)\r\n  //todo: change initial step to 0 to allow mode choice\r\n  let [setupStep, setSetupStep] = useState(1)\r\n\r\n\r\n\r\n  const reset = () => {\r\n    setEntries(0);\r\n    setGuesses([])\r\n    setIsNumericMode(false);\r\n    //todo: change initial step to 0 to allow mode choice\r\n    setSetupStep(1);\r\n  }\r\n\r\n  let endOfPage = useRef(null);\r\n  useEffect(()=> {\r\n    setTimeout(() => {\r\n      endOfPage.current.scrollIntoView({behavior: \"smooth\"})\r\n    }, 350);\r\n  }, [guesses])\r\n\r\n\r\nconst checkGuess = (values) => {\r\n  const res = {bull: 0, cow: 0};\r\n  values.forEach((v,idx,arr) =>{\r\n    // if (arr.indexOf(v) !== idx)\r\n    //   return;\r\n    if (v === entries[idx])\r\n      res.bull++;\r\n    else if (entries.includes(v))\r\n      res.cow++\r\n  })\r\n  return res;\r\n}\r\n\r\nconst setMode = (numeric) => () => {\r\n  setIsNumericMode(numeric);\r\n  setSetupStep(setupStep + 1)\r\n}\r\n\r\nconst chooseMode = <div>\r\n<h2>?איך תרצו לשחק</h2>\r\n  <button className='mode-choice'\r\n    onClick={setMode(true)}\r\n  >מספרים</button>\r\n  <button className='mode-choice'\r\n    onClick={setMode(false)}\r\n  >צבעים</button>\r\n</div>;\r\n\r\nconst chooseSize = <div>\r\n<h2>?כמה {isNumericMode ? 'מספרים' : 'צבעים'} להגריל</h2>\r\n<NumberForm\r\n  numOfEntries={1}\r\n  validator={(v) => v < 1 || v > 5}\r\n  showColors={false}\r\n  handleSubmit={(...v) => setEntries(randomizeEntries(parseInt(v)))} />\r\n  {/* todo: return this button when mode choice is enabled\r\n  <div><button onClick={reset}>חזרה לבחירת מצב</button></div> \r\n  */}\r\n</div>;\r\n\r\n\r\nconst setup = [chooseMode, chooseSize];\r\n\r\nconst randomizeEntries = (amount) => {\r\n  let entries = []\r\n  for (let i=0; i<amount; i++){\r\n    let rand = getRandomDigit();\r\n    while (entries.includes(rand)){\r\n      rand = getRandomDigit()\r\n    }\r\n    entries.push(rand);\r\n  }\r\n  return entries;\r\n}\r\n  let jsx;\r\n  if (!entries)\r\n    jsx = setup[setupStep]\r\n  else{\r\n    let won = false;\r\n    let guessWithRes = [];\r\n    guesses.forEach((g,i) => {\r\n      let res = checkGuess(g)\r\n      won = res.bull === entries.length;\r\n      guessWithRes.push({guess: g, res})\r\n      console.log(guessWithRes);\r\n    })\r\n    jsx=\r\n    <div>\r\n      <Guess isNumericMode={isNumericMode} values={entries.map(e => won ? e : '*')} classes={['non-active-guess']} />\r\n      <div><button onClick={reset}>reset</button></div>\r\n      {guessWithRes.map((gr, idx) => <Guess key={idx} values={gr.guess} res={gr.res} isNumericMode={isNumericMode} classes={['non-active-guess']} />)}\r\n      { !won ? <div>\r\n        <Form\r\n        numOfEntries={entries.length}\r\n        handleSubmit={(v) => setGuesses([...guesses, v])}\r\n        isNumericMode={isNumericMode} />\r\n        </div>\r\n        : \r\n        <img className=\"thumbsup\" src={thumbsUp} alt=\"good job\"/>}\r\n      </div>\r\n  }\r\n  return <div>\r\n  {jsx}\r\n  <div ref={endOfPage} />\r\n  </div>;\r\n}\r\n\r\n\r\nfunction getRandomDigit(){\r\n  return Math.floor(Math.random() * 10);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/thumbsup.c4c673ec.png\";"],"sourceRoot":""}